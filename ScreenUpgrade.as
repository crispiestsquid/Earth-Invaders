package {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	public class ScreenUpgrade extends MovieClip	{		private var _easing:Number;		private var knight:Block;		private var wall:Block;		private var cannon:Ranged;		private var archers:Ranged;		public function ScreenUpgrade()		{			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}		private function onAddedToStage(e:Event):void		{			// set variables			_easing = 0.5;			// set upgrades			knight = new Block();			knight.type = "knight";			knight.x = knightReset.x;			knight.y = knightReset.y;			addChild(knight);			wall = new Block();			wall.type = "brickWall";			wall.x = wallReset.x;			wall.y = wallReset.y;			addChild(wall);			cannon = new Ranged();			cannon.type = "cannon";			cannon.x = cannonReset.x;			cannon.y = cannonReset.y;			addChild(cannon);			archers = new Ranged();			archers.x = archersReset.x;			archers.y = archersReset.y;			addChild(archers);			// set up player upgrades			longbow.gotoAndStop("longbow");			longbow.alpha = .5;			crossbow.gotoAndStop("crossbow");			crossbow.alpha = .5;			splitshot.gotoAndStop("splitshot");			splitshot.alpha = .5;						splitshot.addEventListener(MouseEvent.CLICK, onSplitshot);			crossbow.addEventListener(MouseEvent.CLICK, onCrossbow);			longbow.addEventListener(MouseEvent.CLICK, onLongbow);			// add listeners;			addEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);			addEventListener(Event.ENTER_FRAME, Update);			continue_btn.addEventListener(MouseEvent.CLICK, onContinue);		}		private function onRemovedFromStage(e:Event):void		{			// remove listeners			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			removeEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);			removeEventListener(Event.ENTER_FRAME, Update);		}				private function onSplitshot(e:MouseEvent):void		{			MovieClip(parent).player.arrowType = "split";			splitshot.alpha = 1;			crossbow.alpha = .5;			longbow.alpha = .5;		}				private function onLongbow(e:MouseEvent):void		{			MovieClip(parent).player.arrowType = "penetrating";			splitshot.alpha = .5;			crossbow.alpha = .5;			longbow.alpha = 1;		}				private function onCrossbow(e:MouseEvent):void		{			MovieClip(parent).player.arrowType = "strong";			splitshot.alpha = .5;			crossbow.alpha = 1;			longbow.alpha = .5;		}		private function Update(e:Event):void		{			if (this != null)			{				// check knight against drop boxes				if (knight.hitTestObject(MovieClip(parent).blockDrop1))				{					if (! knight.isBeingDragged && ! knight.hasBeenSet)					{						MovieClip(parent).blockDrop1.getChildAt(1).type = "knight";						MovieClip(parent).blockDrop1.getChildAt(1).hasBeenDragged = false;						MovieClip(parent).blockDrop1.getChildAt(1).hasBeenSet = true;						// reset knight						knight.x = knightReset.x;						knight.y = knightReset.y;						knight.hasBeenDragged = false;					}				}				else if (knight.hitTestObject(MovieClip(parent).blockDrop2))				{					if (! knight.isBeingDragged && ! knight.hasBeenSet)					{						MovieClip(parent).blockDrop2.getChildAt(1).type = "knight";						MovieClip(parent).blockDrop2.getChildAt(1).hasBeenDragged = false;						MovieClip(parent).blockDrop2.getChildAt(1).hasBeenSet = true;						// reset knight						knight.x = knightReset.x;						knight.y = knightReset.y;						knight.hasBeenDragged = false;					}				}				else if (knight.hasBeenDragged && ! knight.hitTestObject(knightReset))				{					// rest the wall					knight.x = knightReset.x;					knight.y = knightReset.y;					knight.hasBeenDragged = false;				}				// check wall against drop boxes				if (wall.hitTestObject(MovieClip(parent).blockDrop1))				{					if (! wall.isBeingDragged && ! wall.hasBeenSet)					{						MovieClip(parent).blockDrop1.getChildAt(1).type = "brickWall";						MovieClip(parent).blockDrop1.getChildAt(1).hasBeenDragged = false;						MovieClip(parent).blockDrop1.getChildAt(1).hasBeenSet = true;						// reset wall						wall.x = wallReset.x;						wall.y = wallReset.y;						wall.hasBeenDragged = false;					}				}				else if (wall.hitTestObject(MovieClip(parent).blockDrop2))				{					if (! wall.isBeingDragged && ! wall.hasBeenSet)					{						MovieClip(parent).blockDrop2.getChildAt(1).type = "brickWall";						MovieClip(parent).blockDrop2.getChildAt(1).hasBeenDragged = false;						MovieClip(parent).blockDrop2.getChildAt(1).hasBeenSet = true;						// reset wall						wall.x = wallReset.x;						wall.y = wallReset.y;						wall.hasBeenDragged = false;					}				}				else if (wall.hasBeenDragged && ! wall.hitTestObject(wallReset))				{					// rest the wall					wall.x = wallReset.x;					wall.y = wallReset.y;					wall.hasBeenDragged = false;				}				// check archers against drop boxes				if (archers.hitTestObject(MovieClip(parent).rangedDrop1))				{					if (! archers.isBeingDragged && ! archers.hasBeenSet)					{						MovieClip(parent).rangedDrop1.getChildAt(1).type = "archers";						MovieClip(parent).rangedDrop1.getChildAt(1).hasBeenDragged = false;						MovieClip(parent).rangedDrop1.getChildAt(1).hasBeenSet = true;						// reset archers						archers.x = archersReset.x;						archers.y = archersReset.y;						archers.hasBeenDragged = false;					}				}				else if (archers.hitTestObject(MovieClip(parent).rangedDrop2))				{					if (! archers.isBeingDragged && ! archers.hasBeenSet)					{						MovieClip(parent).rangedDrop2.getChildAt(1).type = "archers";						MovieClip(parent).rangedDrop2.getChildAt(1).hasBeenDragged = false;						MovieClip(parent).rangedDrop2.getChildAt(1).hasBeenSet = true;						// reset archers						archers.x = archersReset.x;						archers.y = archersReset.y;						archers.hasBeenDragged = false;					}				}				else if (archers.hasBeenDragged && ! archers.hitTestObject(archersReset))				{					// rest the wall					archers.x = archersReset.x;					archers.y = archersReset.y;					archers.hasBeenDragged = false;				}				// check archers against drop boxes				if (cannon.hitTestObject(MovieClip(parent).rangedDrop1))				{					if (! cannon.isBeingDragged && ! cannon.hasBeenSet)					{						MovieClip(parent).rangedDrop1.getChildAt(1).type = "cannon";						MovieClip(parent).rangedDrop1.getChildAt(1).hasBeenDragged = false;						MovieClip(parent).rangedDrop1.getChildAt(1).hasBeenSet = true;						// reset the cannon						cannon.x = cannonReset.x;						cannon.y = cannonReset.y;						cannon.hasBeenSet = false;					}				}				else if (cannon.hitTestObject(MovieClip(parent).rangedDrop2))				{					if (! cannon.isBeingDragged && ! cannon.hasBeenSet)					{						MovieClip(parent).rangedDrop2.getChildAt(1).type = "cannon";						MovieClip(parent).rangedDrop2.getChildAt(1).hasBeenDragged = false;						MovieClip(parent).rangedDrop2.getChildAt(1).hasBeenSet = true;						// reset the cannon						cannon.x = cannonReset.x;						cannon.y = cannonReset.y;						cannon.hasBeenSet = false;					}				}				else if (cannon.hasBeenDragged && ! cannon.hitTestObject(cannonReset))				{					// rest the wall					cannon.x = cannonReset.x;					cannon.y = cannonReset.y;					cannon.hasBeenDragged = false;				}			}		}		private function onContinue(e:MouseEvent):void		{			MovieClip(parent).removeUpgrade();		}	}}