package {	// import flash assets	import flash.display.MovieClip;	import flash.events.Event;	// define class	public class Arrow extends MovieClip	{		// create variables		private var _vx:Number;		private var _vy:Number;		private var _type:String;		private var _exploded:Boolean;		// define constructor		public function Arrow(vx:Number, vy:Number, startX:Number, startY:Number, angle:Number, type:String):void		{			// set default properties			x = startX;			y = startY;			_vx = vx;			_vy = vy;			_type = type;			rotation = angle;			_exploded = false;			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}		// define onAddedToStage handler		private function onAddedToStage(e:Event):void		{			// add listeners			if (_type == "player")			{				gotoAndStop("arrow");			}			else if (_type == "rangedA")			{				gotoAndStop("arrow");			}			else if (_type == "rangedC")			{				gotoAndStop("cannonBall");			}			addEventListener(Event.ENTER_FRAME, Update);			addEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);		}		// define onRemovedFromStage handler		private function onRemovedFromStage(e:Event):void		{			// remove listeners			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			removeEventListener(Event.ENTER_FRAME, Update);			removeEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);		}		private function Update(e:Event):void		{			if (this != null)			{				// move the arrow				x +=  _vx;				y +=  _vy;				if (_type != "rangedA" && _type != "rangedC")				{					// check for collision with blocks					MovieClip(parent).checkCollisionWithBlocks(this);				}				if (MovieClip(parent) != null && ! _exploded)				{					// check for collision with enemies;					MovieClip(parent).checkCollisionWithEnemies(this);					// see if the arrow is off the top of the stage;					if (y + height / 2 < 0)					{						MovieClip(parent).removeChild(this);					}				}			}		}				public function set vx(velocity:Number):void		{			_vx = velocity;		}				public function set exploded(input:Boolean):void		{			_exploded = input;		}				public function set vy(velocity:Number):void		{			_vy = velocity;		}				public function get type():String		{			return _type;		}	}}